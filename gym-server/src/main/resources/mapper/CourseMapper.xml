<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.sjdddd.mapper.CourseMapper">
    <resultMap id="BaseResultMap" type="com.sjdddd.entity.Course">
        <!--@mbg.generated-->
        <!--@Table gym_courses-->
        <id column="course_id" jdbcType="BIGINT" property="courseId"/>
        <result column="course_name" jdbcType="VARCHAR" property="courseName"/>
        <result column="coach_id" jdbcType="BIGINT" property="coachId"/>
        <result column="schedule_start" jdbcType="TIMESTAMP" property="scheduleStart"/>
        <result column="schedule_end" jdbcType="TIMESTAMP" property="scheduleEnd"/>
        <result column="course_fee" jdbcType="DECIMAL" property="courseFee"/>
        <result column="isEnrolled" jdbcType="CHAR" property="isEnrolled"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
    </resultMap>
    <sql id="Base_Column_List">
        <!--@mbg.generated-->
        course_id, course_name, coach_id, schedule_start, schedule_end, course_fee, isEnrolled, create_time, update_time
    </sql>
    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        <!--@mbg.generated-->
        select
        <include refid="Base_Column_List"/>
        from gym_courses
        where course_id = #{courseId,jdbcType=BIGINT}
    </select>
    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        <!--@mbg.generated-->
        delete from gym_courses
        where course_id = #{courseId,jdbcType=BIGINT}
    </delete>
    <insert id="insert" keyColumn="course_id" keyProperty="courseId" parameterType="com.sjdddd.entity.Course"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into gym_courses (course_name, coach_id, schedule_start,
        schedule_end, course_fee, isEnrolled, create_time, update_time)
        values (#{courseName,jdbcType=VARCHAR}, #{coachId,jdbcType=BIGINT}, #{scheduleStart,jdbcType=TIMESTAMP},
        #{scheduleEnd,jdbcType=TIMESTAMP}, #{courseFee,jdbcType=DECIMAL}, #{isEnrolled,jdbcType=CHAR},
        #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP})
    </insert>
    <insert id="insertSelective" keyColumn="course_id" keyProperty="courseId" parameterType="com.sjdddd.entity.Course"
            useGeneratedKeys="true">
        <!--@mbg.generated-->
        insert into gym_courses
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="courseName != null">
                course_name,
            </if>
            <if test="coachId != null">
                coach_id,
            </if>
            <if test="scheduleStart != null">
                schedule_start,
            </if>
            <if test="scheduleEnd != null">
                schedule_end,
            </if>
            <if test="courseFee != null">
                course_fee,
            </if>
            <if test="isEnrolled != null">
                isEnrolled,
            </if>
            <if test="updateTime != null">
                update_time,
            </if>
            <if test="createTime != null">
                create_time,
            </if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="courseName != null">
                #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="coachId != null">
                #{coachId,jdbcType=BIGINT},
            </if>
            <if test="scheduleStart != null">
                #{scheduleStart,jdbcType=TIMESTAMP},
            </if>
            <if test="scheduleEnd != null">
                #{scheduleEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="courseFee != null">
                #{courseFee,jdbcType=DECIMAL},
            </if>
            <if test="isEnrolled != null">
                #{isEnrolled,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.sjdddd.entity.Course">
        <!--@mbg.generated-->
        update gym_courses
        <set>
            <if test="courseName != null">
                course_name = #{courseName,jdbcType=VARCHAR},
            </if>
            <if test="coachId != null">
                coach_id = #{coachId,jdbcType=BIGINT},
            </if>
            <if test="scheduleStart != null">
                schedule_start = #{scheduleStart,jdbcType=TIMESTAMP},
            </if>
            <if test="scheduleEnd != null">
                schedule_end = #{scheduleEnd,jdbcType=TIMESTAMP},
            </if>
            <if test="courseFee != null">
                course_fee = #{courseFee,jdbcType=DECIMAL},
            </if>
            <if test="isEnrolled != null">
                isEnrolled = #{isEnrolled,jdbcType=CHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createTime != null">
                create_time = #{createTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where course_id = #{courseId,jdbcType=BIGINT}
    </update>
    <update id="updateByPrimaryKey" parameterType="com.sjdddd.entity.Course">
        <!--@mbg.generated-->
        update gym_courses
        set course_name = #{courseName,jdbcType=VARCHAR},
        coach_id = #{coachId,jdbcType=BIGINT},
        schedule_start = #{scheduleStart,jdbcType=TIMESTAMP},
        schedule_end = #{scheduleEnd,jdbcType=TIMESTAMP},
        course_fee = #{courseFee,jdbcType=DECIMAL},
        isEnrolled = #{isEnrolled,jdbcType=CHAR},
        create_time = #{createTime,jdbcType=TIMESTAMP},
        update_time = #{updateTime,jdbcType=TIMESTAMP}
        where course_id = #{courseId,jdbcType=BIGINT}
    </update>

    <select id="selectAll" resultType="com.sjdddd.entity.Course">
        select course.*, coach.coach_real_name
        from gym_courses course
                 left join gym_coachs coach
                           on course.coach_id = coach.coach_id
        order by course_id
    </select>

    <select id="selectByCourseName" resultMap="BaseResultMap">
        select course.*, coach.coach_real_name
        from gym_courses course
        left join gym_coachs coach
        on course.coach_id = coach.coach_id
        <if test="course_name != null and course_name != ''">
            where course_name like concat('%', #{courseName, jdbcType=VARCHAR}, '%')
        </if>
        order by course_id
    </select>

    <select id="selectCoursePrice" resultType="java.math.BigDecimal">
        select course_fee
        from gym_courses
        where course_id = #{courseId, jdbcType=BIGINT}
    </select>
    <select id="selectAllMember" resultType="com.sjdddd.dto.CourseWithEnrollmentStatusDTO">
        SELECT
            course.*,
            coach.coach_real_name AS coachRealName,
            MAX(CASE WHEN booking.user_id = #{userId, jdbcType=BIGINT}
                THEN booking.isEnrolledByCurrentUser ELSE '0'
                END) AS isEnrolledByCurrentUser,
            MAX(CASE WHEN booking.user_id != #{userId, jdbcType=BIGINT}
                     AND booking.isEnrolledByCurrentUser = '1'
                THEN '1' ELSE '0'
                END) AS isEnrolledByOther
        FROM gym_courses course
            LEFT JOIN gym_coachs coach
                ON course.coach_id = coach.coach_id
            LEFT JOIN gym_booking booking
                ON course.course_id = booking.course_id
        GROUP BY course.course_id, coach.coach_real_name
        ORDER BY course.course_id

    </select>

    <update id="updateCourseStatus">
        update gym_courses
        set isEnrolled = 1
        where course_id = #{courseId, jdbcType=BIGINT}
    </update>

    <select id="selectCourseStatus" resultType="java.lang.String">
        select isEnrolled
        from gym_courses
        where course_id = #{courseId, jdbcType=BIGINT}
    </select>

    <update id="updateCourseStatusNo">
        update gym_courses
        set isEnrolled = 0
        where course_id = #{courseId, jdbcType=BIGINT}
    </update>
</mapper>
